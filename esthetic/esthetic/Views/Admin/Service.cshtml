@model Esthetic.Models.AdminModel

<div class="services-list" id="category_@Model.Service.Id">
    @using (Ajax.BeginForm("UpdateService", "Admin", new { id = Model.Service.Id }, new AjaxOptions
    {
        InsertionMode = InsertionMode.ReplaceWith,
        HttpMethod = "POST",
        UpdateTargetId = "service_" + Model.Service.Id,
        OnSuccess = "setServiceButtons"
    }, null))
    {
        <div>
            <span class="btn btn-link edit-service-btn pull-right">Editar</span>
            <span>
                <strong>@Model.Service.Name</strong>
                <strong>(@Model.ServicesType.Find(s => s.Id == Model.Service.ServiceTypeId).Name)</strong>
            </span>
            <p>@Model.Service.Description</p>
        </div>
        <div class="row display-none edit-form">
            <div>
                @Html.LabelFor(model => Model.EditServiceName)
                @Html.EditorFor(model => Model.EditServiceName, new { htmlAttributes = new { @class = "form-control", @Value = Model.Service.Name } })

                @Html.LabelFor(model => Model.EditServiceDescription)
                @Html.TextArea("EditServiceDescription", @Model.Service.Description, new { @class = "form-control" })

                @Html.LabelFor(model => Model.ServiceTypeSelected)
                @Html.DropDownListFor(model => model.ServiceTypeSelected, new SelectList(Model.ServicesType.Where(c => c.Id != Model.Service.ServiceTypeId), "Id", "Name"), new { @class = "form-control", id = "ser-sel-" + Model.Service.Id })
                <script>
                    var func = (function () { document.getElementById('ser-sel-@Model.Service.Id').value = "@Model.Service.ServiceTypeId"; })();
                </script>
            </div>

            <span class="btn btn-link cancel-edit-service">Cancelar</span>
            <input type="submit" class="btn btn-link" value="Guardar cambios" />
            <span id="@Model.Service.Id" class="btn btn-sm btn-danger delete-service">Eliminar</span>
        </div>
    }
</div>
